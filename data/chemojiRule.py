emojis = list(set("""🥇🥈🥉🆎🏧🅰️🅰🇦🇫🇦🇱🇩🇿🇦🇸🇦🇩🇦🇴🇦🇮🇦🇶🇦🇬♒🇦🇷♈🇦🇲🇦🇼🇦🇨🇦🇺🇦🇹🇦🇿🔙🅱️🅱🇧🇸🇧🇭🇧🇩🇧🇧🇧🇾🇧🇪🇧🇿🇧🇯🇧🇲🇧🇹🇧🇴🇧🇦🇧🇼🇧🇻🇧🇷🇮🇴🇻🇬🇧🇳🇧🇬🇧🇫🇧🇮🆑🆒🇰🇭🇨🇲🇨🇦🇮🇨♋🇨🇻♑🇧🇶🇰🇾🇨🇫🇪🇦🇹🇩🇨🇱🇨🇳🇨🇽🎄🇨🇵🇨🇨🇨🇴🇰🇲🇨🇬🇨🇩🇨🇰🇨🇷🇭🇷🇨🇺🇨🇼🇨🇾🇨🇿🇨🇮🇩🇰🇩🇬🇩🇯🇩🇲🇩🇴🔚🇪🇨🇪🇬🇸🇻🏴󠁧󠁢󠁥󠁮󠁧󠁿🇬🇶🇪🇷🇪🇪🇸🇿🇪🇹🇪🇺🆓🇫🇰🇫🇴🇫🇯🇫🇮🇫🇷🇬🇫🇵🇫🇹🇫🇬🇦🇬🇲♊🇬🇪🇩🇪🇬🇭🇬🇮🇬🇷🇬🇱🇬🇩🇬🇵🇬🇺🇬🇹🇬🇬🇬🇳🇬🇼🇬🇾🇭🇹🇭🇲🇭🇳🇭🇰🇭🇺🆔🇮🇸🇮🇳🇮🇩🇮🇷🇮🇶🇮🇪🇮🇲🇮🇱🇮🇹🇯🇲🇯🇵🉑🈸🉐🏯㊗️㊗🈹🎎🈚🈁🈷️🈷🈵🈶🈺🈴🏣🈲🈯㊙️㊙🈂️🈂🔰🈳🇯🇪🇯🇴🇰🇿🇰🇪🇰🇮🇽🇰🇰🇼🇰🇬🇱🇦🇱🇻🇱🇧♌🇱🇸🇱🇷♎🇱🇾🇱🇮🇱🇹🇱🇺🇲🇴🇲🇬🇲🇼🇲🇾🇲🇻🇲🇱🇲🇹🇲🇭🇲🇶🇲🇷🇲🇺🇾🇹🇲🇽🇫🇲🇲🇩🇲🇨🇲🇳🇲🇪🇲🇸🇲🇦🇲🇿🤶🤶🏿🤶🏻🤶🏾🤶🏼🤶🏽🇲🇲🆕🆖🇳🇦🇳🇷🇳🇵🇳🇱🇳🇨🇳🇿🇳🇮🇳🇪🇳🇬🇳🇺🇳🇫🇰🇵🇲🇰🇲🇵🇳🇴🆗👌👌🏿👌🏻👌🏾👌🏼👌🏽🔛🅾️🅾🇴🇲⛎🅿️🅿🇵🇰🇵🇼🇵🇸🇵🇦🇵🇬🇵🇾🇵🇪🇵🇭♓🇵🇳🇵🇱🇵🇹🇵🇷🇶🇦🇷🇴🇷🇺🇷🇼🇷🇪🔜🆘♐🇼🇸🇸🇲🎅🎅🏿🎅🏻🎅🏾🎅🏼🎅🏽🇸🇦♏🏴󠁧󠁢󠁳󠁣󠁴󠁿🇸🇳🇷🇸🇸🇨🇸🇱🇸🇬🇸🇽🇸🇰🇸🇮🇸🇧🇸🇴🇿🇦🇬🇸🇰🇷🇸🇸🇪🇸🇱🇰🇧🇱🇸🇭🇰🇳🇱🇨🇲🇫🇵🇲🇻🇨🗽🇸🇩🇸🇷🇸🇯🇸🇪🇨🇭🇸🇾🇸🇹🦖🔝🇹🇼🇹🇯🇹🇿♉🇹🇭🇹🇱🇹🇬🇹🇰🗼🇹🇴🇹🇹🇹🇦🇹🇳🇹🇷🇹🇲🇹🇨🇹🇻🇺🇲🇻🇮🆙🇺🇬🇺🇦🇦🇪🇬🇧🇺🇳🇺🇸🇺🇾🇺🇿🆚🇻🇺🇻🇦🇻🇪🇻🇳♍🏴󠁧󠁢󠁷󠁬󠁳󠁿🇼🇫🇪🇭🇾🇪💤🇿🇲🇿🇼🧮🪗🩹🎟️🎟🚡✈️✈🛬🛫⏰⚗️⚗👽👾🚑🏈🏺🫀⚓💢😠👿😧🐜📶😰🚛🧑‍🎨🧑🏿‍🎨🧑🏻‍🎨🧑🏾‍🎨🧑🏼‍🎨🧑🏽‍🎨🎨😲🧑‍🚀🧑🏿‍🚀🧑🏻‍🚀🧑🏾‍🚀🧑🏼‍🚀🧑🏽‍🚀⚛️⚛🛺🚗🥑🪓👶👼👼🏿👼🏻👼🏾👼🏼👼🏽🍼🐤👶🏿👶🏻👶🏾👶🏼👶🏽🚼👇👇🏿👇🏻👇🏾👇🏼👇🏽👈👈🏿👈🏻👈🏾👈🏼👈🏽👉👉🏿👉🏻👉🏾👉🏼👉🏽👆👆🏿👆🏻👆🏾👆🏼👆🏽🎒🥓🦡🏸🥯🛄🥖⚖️⚖🦲🩰🎈🗳️🗳🍌🪕🏦📊💈⚾🧺🏀🦇🛁🔋🏖️🏖😁🫘🐻💓🦫🛏️🛏🍺🪲🔔🫑🔕🛎️🛎🍱🧃🚲👙🧢☣️☣🐦🎂🦬🫦🐦‍⬛🐈‍⬛⚫🏴🖤⬛◾◼️◼✒️✒▪️▪🔲🌼🐡📘🔵💙🟦🫐🐗💣🦴🔖📑📚🪃🍾💐🏹🥣🎳🥊👦👦🏿👦🏻👦🏾👦🏼👦🏽🧠🍞🤱🤱🏿🤱🏻🤱🏾🤱🏼🤱🏽🧱🌉💼🩲🔆🥦💔🧹🟤🤎🟫🧋🫧🪣🐛🏗️🏗🚅🎯🌯🚌🚏👤👥🧈🦋🌵📅🤙🤙🏿🤙🏻🤙🏾🤙🏼🤙🏽🐪📷📸🏕️🏕🕯️🕯🍬🥫🛶🗃️🗃📇🗂️🗂🎠🎏🪚🥕🏰🐈🐱😹😼⛓️⛓🪑📉📈💹☑️☑✔️✔✅🧀🏁🍒🌸♟️♟🌰🐔🧒🧒🏿🧒🏻🧒🏾🧒🏼🧒🏽🚸🐿️🐿🍫🥢⛪🚬🎦Ⓜ️Ⓜ🎪🏙️🏙🌆🗜️🗜🎬👏👏🏿👏🏻👏🏾👏🏼👏🏽🏛️🏛🍻🥂📋🔃📕📪📫🌂☁️☁🌩️🌩⛈️⛈🌧️🌧🌨️🌨🤡♣️♣👝🧥🪳🍸🥥⚰️⚰🪙🥶💥☄️☄🧭
💽🖱️🖱🎊😖😕🚧👷👷🏿👷🏻👷🏾👷🏼👷🏽🎛️🎛🏪🧑‍🍳🧑🏿‍🍳🧑🏻‍🍳🧑🏾‍🍳🧑🏼‍🍳🧑🏽‍🍳🍚🍪🍳©️©🪸🛋️🛋🔄💑💑🏿💑🏻👨‍❤️‍👨👨‍❤‍👨👨🏿‍❤️‍👨🏿👨🏿‍❤‍👨🏿👨🏿‍❤️‍👨🏻👨🏿‍❤‍👨🏻👨🏿‍❤️‍👨🏾👨🏿‍❤‍👨🏾👨🏿‍❤️‍👨🏼👨🏿‍❤‍👨🏼👨🏿‍❤️‍👨🏽👨🏿‍❤‍👨🏽👨🏻‍❤️‍👨🏻👨🏻‍❤‍👨🏻👨🏻‍❤️‍👨🏿👨🏻‍❤‍👨🏿👨🏻‍❤️‍👨🏾👨🏻‍❤‍👨🏾👨🏻‍❤️‍👨🏼👨🏻‍❤‍👨🏼👨🏻‍❤️‍👨🏽👨🏻‍❤‍👨🏽👨🏾‍❤️‍👨🏾👨🏾‍❤‍👨🏾👨🏾‍❤️‍👨🏿👨🏾‍❤‍👨🏿👨🏾‍❤️‍👨🏻👨🏾‍❤‍👨🏻👨🏾‍❤️‍👨🏼👨🏾‍❤‍👨🏼👨🏾‍❤️‍👨🏽👨🏾‍❤‍👨🏽👨🏼‍❤️‍👨🏼👨🏼‍❤‍👨🏼👨🏼‍❤️‍👨🏿👨🏼‍❤‍👨🏿👨🏼‍❤️‍👨🏻👨🏼‍❤‍👨🏻👨🏼‍❤️‍👨🏾👨🏼‍❤‍👨🏾👨🏼‍❤️‍👨🏽👨🏼‍❤‍👨🏽👨🏽‍❤️‍👨🏽👨🏽‍❤‍👨🏽👨🏽‍❤️‍👨🏿👨🏽‍❤‍👨🏿👨🏽‍❤️‍👨🏻👨🏽‍❤‍👨🏻👨🏽‍❤️‍👨🏾👨🏽‍❤‍👨🏾👨🏽‍❤️‍👨🏼👨🏽‍❤‍👨🏼💑🏾💑🏼💑🏽🧑🏿‍❤️‍🧑🏻🧑🏿‍❤‍🧑🏻🧑🏿‍❤️‍🧑🏾🧑🏿‍❤‍🧑🏾🧑🏿‍❤️‍🧑🏼🧑🏿‍❤‍🧑🏼🧑🏿‍❤️‍🧑🏽🧑🏿‍❤‍🧑🏽🧑🏻‍❤️‍🧑🏿🧑🏻‍❤‍🧑🏿🧑🏻‍❤️‍🧑🏾🧑🏻‍❤‍🧑🏾🧑🏻‍❤️‍🧑🏼🧑🏻‍❤‍🧑🏼🧑🏻‍❤️‍🧑🏽🧑🏻‍❤‍🧑🏽🧑🏾‍❤️‍🧑🏿🧑🏾‍❤‍🧑🏿🧑🏾‍❤️‍🧑🏻🧑🏾‍❤‍🧑🏻🧑🏾‍❤️‍🧑🏼🧑🏾‍❤‍🧑🏼🧑🏾‍❤️‍🧑🏽🧑🏾‍❤‍🧑🏽🧑🏼‍❤️‍🧑🏿🧑🏼‍❤‍🧑🏿🧑🏼‍❤️‍🧑🏻🧑🏼‍❤‍🧑🏻🧑🏼‍❤️‍🧑🏾🧑🏼‍❤‍🧑🏾🧑🏼‍❤️‍🧑🏽🧑🏼‍❤‍🧑🏽🧑🏽‍❤️‍🧑🏿🧑🏽‍❤‍🧑🏿🧑🏽‍❤️‍🧑🏻🧑🏽‍❤‍🧑🏻🧑🏽‍❤️‍🧑🏾🧑🏽‍❤‍🧑🏾🧑🏽‍❤️‍🧑🏼🧑🏽‍❤‍🧑🏼👩‍❤️‍👨👩‍❤‍👨👩🏿‍❤️‍👨🏿👩🏿‍❤‍👨🏿👩🏿‍❤️‍👨🏻👩🏿‍❤‍👨🏻👩🏿‍❤️‍👨🏾👩🏿‍❤‍👨🏾👩🏿‍❤️‍👨🏼👩🏿‍❤‍👨🏼👩🏿‍❤️‍👨🏽👩🏿‍❤‍👨🏽👩🏻‍❤️‍👨🏻👩🏻‍❤‍👨🏻👩🏻‍❤️‍👨🏿👩🏻‍❤‍👨🏿👩🏻‍❤️‍👨🏾👩🏻‍❤‍👨🏾👩🏻‍❤️‍👨🏼👩🏻‍❤‍👨🏼👩🏻‍❤️‍👨🏽👩🏻‍❤‍👨🏽👩🏾‍❤️‍👨🏾👩🏾‍❤‍👨🏾👩🏾‍❤️‍👨🏿👩🏾‍❤‍👨🏿👩🏾‍❤️‍👨🏻👩🏾‍❤‍👨🏻👩🏾‍❤️‍👨🏼👩🏾‍❤‍👨🏼👩🏾‍❤️‍👨🏽👩🏾‍❤‍👨🏽👩🏼‍❤️‍👨🏼👩🏼‍❤‍👨🏼👩🏼‍❤️‍👨🏿👩🏼‍❤‍👨🏿👩🏼‍❤️‍👨🏻👩🏼‍❤‍👨🏻👩🏼‍❤️‍👨🏾👩🏼‍❤‍👨🏾👩🏼‍❤️‍👨🏽👩🏼‍❤‍👨🏽👩🏽‍❤️‍👨🏽👩🏽‍❤‍👨🏽👩🏽‍❤️‍👨🏿👩🏽‍❤‍👨🏿👩🏽‍❤️‍👨🏻👩🏽‍❤‍👨🏻👩🏽‍❤️‍👨🏾👩🏽‍❤‍👨🏾👩🏽‍❤️‍👨🏼👩🏽‍❤‍👨🏼👩‍❤️‍👩👩‍❤‍👩👩🏿‍❤️‍👩🏿👩🏿‍❤‍👩🏿👩🏿‍❤️‍👩🏻👩🏿‍❤‍👩🏻👩🏿‍❤️‍👩🏾👩🏿‍❤‍👩🏾👩🏿‍❤️‍👩🏼👩🏿‍❤‍👩🏼👩🏿‍❤️‍👩🏽👩🏿‍❤‍👩🏽👩🏻‍❤️‍👩🏻👩🏻‍❤‍👩🏻👩🏻‍❤️‍👩🏿👩🏻‍❤‍👩🏿👩🏻‍❤️‍👩🏾👩🏻‍❤‍👩🏾👩🏻‍❤️‍👩🏼👩🏻‍❤‍👩🏼👩🏻‍❤️‍👩🏽👩🏻‍❤‍👩🏽👩🏾‍❤️‍👩🏾👩🏾‍❤‍👩🏾👩🏾‍❤️‍👩🏿👩🏾‍❤‍👩🏿👩🏾‍❤️‍👩🏻👩🏾‍❤‍👩🏻👩🏾‍❤️‍👩🏼👩🏾‍❤‍👩🏼👩🏾‍❤️‍👩🏽👩🏾‍❤‍👩🏽👩🏼‍❤️‍👩🏼👩🏼‍❤‍👩🏼👩🏼‍❤️‍👩🏿👩🏼‍❤‍👩🏿👩🏼‍❤️‍👩🏻👩🏼‍❤‍👩🏻👩🏼‍❤️‍👩🏾👩🏼‍❤‍👩🏾👩🏼‍❤️‍👩🏽👩🏼‍❤‍👩🏽👩🏽‍❤️‍👩🏽👩🏽‍❤‍👩🏽👩🏽‍❤️‍👩🏿👩🏽‍❤‍👩🏿👩🏽‍❤️‍👩🏻👩🏽‍❤‍👩🏻👩🏽‍❤️‍👩🏾👩🏽‍❤‍👩🏾👩🏽‍❤️‍👩🏼👩🏽‍❤‍👩🏼🐄🐮🤠🦀🖍️🖍💳🌙🦗🏏🐊🥐❌❎🤞🤞🏿🤞🏻🤞🏾🤞🏼🤞🏽🎌⚔️⚔👑🩼😿😢🔮🥒🥤🧁🥌🦱➰💱🍛🍮🛃🥩🌀🗡️🗡🍡🏿💨🧏‍♂️🧏‍♂🧏🏿‍♂️🧏🏿‍♂🧏🏻‍♂️🧏🏻‍♂🧏🏾‍♂️🧏🏾‍♂🧏🏼‍♂️🧏🏼‍♂🧏🏽‍♂️🧏🏽‍♂🧏🧏🏿🧏🏻🧏🏾🧏🏼🧏🏽🧏‍♀️🧏‍♀🧏🏿‍♀️🧏🏿‍♀🧏🏻‍♀️🧏🏻‍♀🧏🏾‍♀️🧏🏾‍♀🧏🏼‍♀️🧏🏼‍♀🧏🏽‍♀️🧏🏽‍♀🌳🦌🚚🏬🏚️🏚🏜️🏜🏝️🏝🖥️🖥🕵️🕵🕵🏿🕵🏻🕵🏾🕵🏼🕵🏽♦️♦💠🔅😞🥸➗🤿🪔💫🧬🦤🐕🐶💵🐬🫏🚪🫥🔯➿‼️‼🍩🕊️🕊↙️↙↘️↘⬇️⬇😓🔽🐉🐲👗🤤🩸💧🥁🦆🥟📀📧🦅👂👂🏿👂🏻👂🏾👂🏼👂🏽🌽🦻🦻🏿🦻🏻🦻🏾🦻🏼🦻🏽🥚🍆✴️✴✳️✳🕣🕗⏏️⏏🔌🐘🛗🕦🕚🧝🧝🏿🧝🏻🧝🏾🧝🏼🧝🏽🪹😡✉️✉📩💶🌲🐑⁉️⁉🤯😑👁️👁👁️‍🗨️👁‍🗨️👁️‍🗨👁‍🗨👀😘😮‍💨🥹😶‍🌫️😶‍🌫😋😱🤮😵🫤🤭🤕😷🧐🫢😮🫣🤨🙄😵‍💫😤🤬😂🤒😛😶🏭🧑‍🏭🧑🏿‍🏭🧑🏻‍🏭🧑🏾‍🏭🧑🏼‍🏭🧑🏽‍🏭🧚🧚🏿🧚🏻🧚🏾🧚🏼🧚🏽🧆🍂👪👨‍👦👨‍👦‍👦👨‍👧👨‍👧‍👦👨‍👧‍👧👨‍👨‍👦👨‍👨‍👦‍👦👨‍👨‍👧👨‍👨‍👧‍👦👨‍👨‍👧‍👧👨‍👩‍👦👨‍👩‍👦‍👦👨‍👩‍👧👨‍👩‍👧‍👦👨‍👩‍👧‍👧👩‍👦👩‍👦‍👦👩‍👧👩‍👧‍👦👩‍👧‍👧👩‍👩‍👦👩‍👩‍👦‍👦👩‍👩‍👧👩‍👩‍👧‍👦👩‍👩‍👧‍👧🧑‍🌾🧑🏿‍🌾🧑🏻‍🌾🧑🏾‍🌾🧑🏼‍🌾🧑🏽‍🌾⏩⏬⏪⏫📠😨🪶♀️♀🎡⛴️⛴🏑🗄️🗄📁🎞️🎞📽️📽🔥🚒🧯🧨🧑‍🚒🧑🏿‍🚒🧑🏻‍🚒🧑🏾‍🚒🧑🏼‍🚒🧑🏽‍🚒🎆🌓🌛🐟🍥🎣🕠🕔⛳🦩🔦🥿🫓⚜️⚜💪💪🏿💪🏻💪🏾💪🏼💪🏽💾🎴😳🪈🪰🥏🛸🌫️🌫🌁🙏🙏🏿🙏🏻🙏🏾🙏🏼🙏🏽🪭🫕🦶🦶🏿🦶🏻🦶🏾🦶🏼🦶🏽👣🍴🍽️🍽🥠⛲🖋️🖋🕟🍀🕓🦊🖼️🖼🍟🍤🐸🐥☹️☹😦⛽🌕🌝⚱️⚱🎲🧄⚙️⚙💎🧞👻🫚🦒👧👧🏿👧🏻👧🏾👧🏼👧🏽🥛👓🌎🌏🌍🌐🧤🌟🥅🐐👺🥽🪿🦍🎓🍇🍏📗🟢💚🥗🟩🩶😬😺😸😀😃😄😅😆💗💂💂🏿💂🏻💂🏾💂🏼💂🏽🦮🎸🪮🍔🔨⚒️⚒🛠️🛠🪬🐹🖐️🖐🖐🏿🖐🏻🖐🏾🖐🏼🖐🏽🫰🫰🏿🫰🏻🫰🏾🫰🏼🫰🏽👜🤝🤝🏿🫱🏿‍🫲🏻🫱🏿‍🫲🏾🫱🏿‍🫲🏼🫱🏿‍🫲🏽🤝🏻
🫱🏻‍🫲🏿🫱🏻‍🫲🏾🫱🏻‍🫲🏼🫱🏻‍🫲🏽🤝🏾🫱🏾‍🫲🏿🫱🏾‍🫲🏻🫱🏾‍🫲🏼🫱🏾‍🫲🏽🤝🏼🫱🏼‍🫲🏿🫱🏼‍🫲🏻🫱🏼‍🫲🏾🫱🏼‍🫲🏽🤝🏽🫱🏽‍🫲🏿🫱🏽‍🫲🏻🫱🏽‍🫲🏾🫱🏽‍🫲🏼🐣🎧🪦🧑‍⚕️🧑‍⚕🧑🏿‍⚕️🧑🏿‍⚕🧑🏻‍⚕️🧑🏻‍⚕🧑🏾‍⚕️🧑🏾‍⚕🧑🏼‍⚕️🧑🏼‍⚕🧑🏽‍⚕️🧑🏽‍⚕🙉💟❣️❣🫶🫶🏿🫶🏻🫶🏾🫶🏼🫶🏽❤️‍🔥❤‍🔥♥️♥💘💝💲🟰🦔🚁🌿🌺👠🚄⚡🥾🛕🦛🕳️🕳⭕🍯🐝🪝🚥🐎🐴🏇🏇🏿🏇🏻🏇🏾🏇🏼🏇🏽🏥☕🌭🥵🌶️🌶♨️♨🏨⌛⏳🏠🏡🏘️🏘💯😯🛖🪻🧊🍨🏒⛸️⛸🪪📥📨🫵🫵🏿🫵🏻🫵🏾🫵🏼🫵🏽☝️☝☝🏿☝🏻☝🏾☝🏼☝🏽♾️♾ℹ️ℹ🔤🔡🔠🔢🔣🎃🫙👖🪼🃏🕹️🕹🧑‍⚖️🧑‍⚖🧑🏿‍⚖️🧑🏿‍⚖🧑🏻‍⚖️🧑🏻‍⚖🧑🏾‍⚖️🧑🏾‍⚖🧑🏼‍⚖️🧑🏼‍⚖🧑🏽‍⚖️🧑🏽‍⚖🕋🦘🔑⌨️⌨#️⃣#⃣*️⃣*⃣0️⃣0⃣1️⃣1⃣🔟2️⃣2⃣3️⃣3⃣4️⃣4⃣5️⃣5⃣6️⃣6⃣7️⃣7⃣8️⃣8⃣9️⃣9⃣🪯🛴👘💏💏🏿💏🏻👨‍❤️‍💋‍👨👨‍❤‍💋‍👨👨🏿‍❤️‍💋‍👨🏿👨🏿‍❤‍💋‍👨🏿👨🏿‍❤️‍💋‍👨🏻👨🏿‍❤‍💋‍👨🏻👨🏿‍❤️‍💋‍👨🏾👨🏿‍❤‍💋‍👨🏾👨🏿‍❤️‍💋‍👨🏼👨🏿‍❤‍💋‍👨🏼👨🏿‍❤️‍💋‍👨🏽👨🏿‍❤‍💋‍👨🏽👨🏻‍❤️‍💋‍👨🏻👨🏻‍❤‍💋‍👨🏻👨🏻‍❤️‍💋‍👨🏿👨🏻‍❤‍💋‍👨🏿👨🏻‍❤️‍💋‍👨🏾👨🏻‍❤‍💋‍👨🏾👨🏻‍❤️‍💋‍👨🏼👨🏻‍❤‍💋‍👨🏼👨🏻‍❤️‍💋‍👨🏽👨🏻‍❤‍💋‍👨🏽👨🏾‍❤️‍💋‍👨🏾👨🏾‍❤‍💋‍👨🏾👨🏾‍❤️‍💋‍👨🏿👨🏾‍❤‍💋‍👨🏿👨🏾‍❤️‍💋‍👨🏻👨🏾‍❤‍💋‍👨🏻👨🏾‍❤️‍💋‍👨🏼👨🏾‍❤‍💋‍👨🏼👨🏾‍❤️‍💋‍👨🏽👨🏾‍❤‍💋‍👨🏽👨🏼‍❤️‍💋‍👨🏼👨🏼‍❤‍💋‍👨🏼👨🏼‍❤️‍💋‍👨🏿👨🏼‍❤‍💋‍👨🏿👨🏼‍❤️‍💋‍👨🏻👨🏼‍❤‍💋‍👨🏻👨🏼‍❤️‍💋‍👨🏾👨🏼‍❤‍💋‍👨🏾👨🏼‍❤️‍💋‍👨🏽👨🏼‍❤‍💋‍👨🏽👨🏽‍❤️‍💋‍👨🏽👨🏽‍❤‍💋‍👨🏽👨🏽‍❤️‍💋‍👨🏿👨🏽‍❤‍💋‍👨🏿👨🏽‍❤️‍💋‍👨🏻👨🏽‍❤‍💋‍👨🏻👨🏽‍❤️‍💋‍👨🏾👨🏽‍❤‍💋‍👨🏾👨🏽‍❤️‍💋‍👨🏼👨🏽‍❤‍💋‍👨🏼💋💏🏾💏🏼💏🏽🧑🏿‍❤️‍💋‍🧑🏻🧑🏿‍❤‍💋‍🧑🏻🧑🏿‍❤️‍💋‍🧑🏾🧑🏿‍❤‍💋‍🧑🏾🧑🏿‍❤️‍💋‍🧑🏼🧑🏿‍❤‍💋‍🧑🏼🧑🏿‍❤️‍💋‍🧑🏽🧑🏿‍❤‍💋‍🧑🏽🧑🏻‍❤️‍💋‍🧑🏿🧑🏻‍❤‍💋‍🧑🏿🧑🏻‍❤️‍💋‍🧑🏾🧑🏻‍❤‍💋‍🧑🏾🧑🏻‍❤️‍💋‍🧑🏼🧑🏻‍❤‍💋‍🧑🏼🧑🏻‍❤️‍💋‍🧑🏽🧑🏻‍❤‍💋‍🧑🏽🧑🏾‍❤️‍💋‍🧑🏿🧑🏾‍❤‍💋‍🧑🏿🧑🏾‍❤️‍💋‍🧑🏻🧑🏾‍❤‍💋‍🧑🏻🧑🏾‍❤️‍💋‍🧑🏼🧑🏾‍❤‍💋‍🧑🏼🧑🏾‍❤️‍💋‍🧑🏽🧑🏾‍❤‍💋‍🧑🏽🧑🏼‍❤️‍💋‍🧑🏿🧑🏼‍❤‍💋‍🧑🏿🧑🏼‍❤️‍💋‍🧑🏻🧑🏼‍❤‍💋‍🧑🏻🧑🏼‍❤️‍💋‍🧑🏾🧑🏼‍❤‍💋‍🧑🏾🧑🏼‍❤️‍💋‍🧑🏽🧑🏼‍❤‍💋‍🧑🏽🧑🏽‍❤️‍💋‍🧑🏿🧑🏽‍❤‍💋‍🧑🏿🧑🏽‍❤️‍💋‍🧑🏻🧑🏽‍❤‍💋‍🧑🏻🧑🏽‍❤️‍💋‍🧑🏾🧑🏽‍❤‍💋‍🧑🏾🧑🏽‍❤️‍💋‍🧑🏼🧑🏽‍❤‍💋‍🧑🏼👩‍❤️‍💋‍👨👩‍❤‍💋‍👨👩🏿‍❤️‍💋‍👨🏿👩🏿‍❤‍💋‍👨🏿👩🏿‍❤️‍💋‍👨🏻👩🏿‍❤‍💋‍👨🏻👩🏿‍❤️‍💋‍👨🏾👩🏿‍❤‍💋‍👨🏾👩🏿‍❤️‍💋‍👨🏼👩🏿‍❤‍💋‍👨🏼👩🏿‍❤️‍💋‍👨🏽👩🏿‍❤‍💋‍👨🏽👩🏻‍❤️‍💋‍👨🏻👩🏻‍❤‍💋‍👨🏻👩🏻‍❤️‍💋‍👨🏿👩🏻‍❤‍💋‍👨🏿👩🏻‍❤️‍💋‍👨🏾👩🏻‍❤‍💋‍👨🏾👩🏻‍❤️‍💋‍👨🏼👩🏻‍❤‍💋‍👨🏼👩🏻‍❤️‍💋‍👨🏽👩🏻‍❤‍💋‍👨🏽👩🏾‍❤️‍💋‍👨🏾👩🏾‍❤‍💋‍👨🏾👩🏾‍❤️‍💋‍👨🏿👩🏾‍❤‍💋‍👨🏿👩🏾‍❤️‍💋‍👨🏻👩🏾‍❤‍💋‍👨🏻👩🏾‍❤️‍💋‍👨🏼👩🏾‍❤‍💋‍👨🏼👩🏾‍❤️‍💋‍👨🏽👩🏾‍❤‍💋‍👨🏽👩🏼‍❤️‍💋‍👨🏼👩🏼‍❤‍💋‍👨🏼👩🏼‍❤️‍💋‍👨🏿👩🏼‍❤‍💋‍👨🏿👩🏼‍❤️‍💋‍👨🏻👩🏼‍❤‍💋‍👨🏻👩🏼‍❤️‍💋‍👨🏾👩🏼‍❤‍💋‍👨🏾👩🏼‍❤️‍💋‍👨🏽👩🏼‍❤‍💋‍👨🏽👩🏽‍❤️‍💋‍👨🏽👩🏽‍❤‍💋‍👨🏽👩🏽‍❤️‍💋‍👨🏿👩🏽‍❤‍💋‍👨🏿👩🏽‍❤️‍💋‍👨🏻👩🏽‍❤‍💋‍👨🏻👩🏽‍❤️‍💋‍👨🏾👩🏽‍❤‍💋‍👨🏾👩🏽‍❤️‍💋‍👨🏼👩🏽‍❤‍💋‍👨🏼👩‍❤️‍💋‍👩👩‍❤‍💋‍👩👩🏿‍❤️‍💋‍👩🏿👩🏿‍❤‍💋‍👩🏿👩🏿‍❤️‍💋‍👩🏻👩🏿‍❤‍💋‍👩🏻👩🏿‍❤️‍💋‍👩🏾👩🏿‍❤‍💋‍👩🏾👩🏿‍❤️‍💋‍👩🏼👩🏿‍❤‍💋‍👩🏼👩🏿‍❤️‍💋‍👩🏽👩🏿‍❤‍💋‍👩🏽👩🏻‍❤️‍💋‍👩🏻👩🏻‍❤‍💋‍👩🏻👩🏻‍❤️‍💋‍👩🏿👩🏻‍❤‍💋‍👩🏿👩🏻‍❤️‍💋‍👩🏾👩🏻‍❤‍💋‍👩🏾👩🏻‍❤️‍💋‍👩🏼👩🏻‍❤‍💋‍👩🏼👩🏻‍❤️‍💋‍👩🏽👩🏻‍❤‍💋‍👩🏽👩🏾‍❤️‍💋‍👩🏾👩🏾‍❤‍💋‍👩🏾👩🏾‍❤️‍💋‍👩🏿👩🏾‍❤‍💋‍👩🏿👩🏾‍❤️‍💋‍👩🏻👩🏾‍❤‍💋‍👩🏻👩🏾‍❤️‍💋‍👩🏼👩🏾‍❤‍💋‍👩🏼👩🏾‍❤️‍💋‍👩🏽👩🏾‍❤‍💋‍👩🏽👩🏼‍❤️‍💋‍👩🏼👩🏼‍❤‍💋‍👩🏼👩🏼‍❤️‍💋‍👩🏿👩🏼‍❤‍💋‍👩🏿👩🏼‍❤️‍💋‍👩🏻👩🏼‍❤‍💋‍👩🏻👩🏼‍❤️‍💋‍👩🏾👩🏼‍❤‍💋‍👩🏾👩🏼‍❤️‍💋‍👩🏽👩🏼‍❤‍💋‍👩🏽👩🏽‍❤️‍💋‍👩🏽👩🏽‍❤‍💋‍👩🏽👩🏽‍❤️‍💋‍👩🏿👩🏽‍❤‍💋‍👩🏿👩🏽‍❤️‍💋‍👩🏻👩🏽‍❤‍💋‍👩🏻👩🏽‍❤️‍💋‍👩🏾👩🏽‍❤‍💋‍👩🏾👩🏽‍❤️‍💋‍👩🏼👩🏽‍❤‍💋‍👩🏼😽😗😚😙🔪🪁🥝🪢🐨🥼🏷️🏷🥍🪜🐞💻🔷🔶🌗🌜⏮️⏮✝️✝🍃🥬📒🤛🤛🏿🤛🏻🤛🏾🤛🏼🤛🏽↔️↔⬅️⬅↪️↪🛅🗨️🗨🫲🫲🏿🫲🏻🫲🏾🫲🏼🫲🏽🫷🫷🏿🫷🏻🫷🏾🫷🏼🫷🏽🦵🦵🏿🦵🏻🦵🏾🦵🏼🦵🏽🍋🐆🎚️🎚🩵💡🚈🏻🔗🖇️🖇🦁💄🚮🦎🦙🦞🔒🔐🔏🚂🍭🪘🧴🪷😭📢🤟🤟🏿🤟🏻🤟🏾🤟🏼🤟🏽🏩💌🪫🧳🫁🤥🧙🧙🏿🧙🏻🧙🏾🧙🏼🧙🏽🪄🧲🔍🔎🀄♂️♂🦣👨👨‍🎨👨🏿‍🎨👨🏻‍🎨👨🏾‍🎨👨🏼‍🎨👨🏽‍🎨👨‍🚀👨🏿‍🚀👨🏻‍🚀👨🏾‍🚀👨🏼‍🚀👨🏽‍🚀👨‍🦲🧔‍♂️🧔‍♂🚴‍♂️🚴‍♂🚴🏿‍♂️🚴🏿‍♂🚴🏻‍♂️🚴🏻‍♂🚴🏾‍♂️🚴🏾‍♂🚴🏼‍♂️🚴🏼‍♂🚴🏽‍♂️🚴🏽‍♂👱‍♂️👱‍♂⛹️‍♂️⛹‍♂️⛹️‍♂⛹‍♂⛹🏿‍♂️⛹🏿‍♂⛹🏻‍♂️⛹🏻‍♂⛹🏾‍♂️
⛹🏾‍♂⛹🏼‍♂️⛹🏼‍♂⛹🏽‍♂️⛹🏽‍♂🙇‍♂️🙇‍♂🙇🏿‍♂️🙇🏿‍♂🙇🏻‍♂️🙇🏻‍♂🙇🏾‍♂️🙇🏾‍♂🙇🏼‍♂️🙇🏼‍♂🙇🏽‍♂️🙇🏽‍♂🤸‍♂️🤸‍♂🤸🏿‍♂️🤸🏿‍♂🤸🏻‍♂️🤸🏻‍♂🤸🏾‍♂️🤸🏾‍♂🤸🏼‍♂️🤸🏼‍♂🤸🏽‍♂️🤸🏽‍♂🧗‍♂️🧗‍♂🧗🏿‍♂️🧗🏿‍♂🧗🏻‍♂️🧗🏻‍♂🧗🏾‍♂️🧗🏾‍♂🧗🏼‍♂️🧗🏼‍♂🧗🏽‍♂️🧗🏽‍♂👷‍♂️👷‍♂👷🏿‍♂️👷🏿‍♂👷🏻‍♂️👷🏻‍♂👷🏾‍♂️👷🏾‍♂👷🏼‍♂️👷🏼‍♂👷🏽‍♂️👷🏽‍♂👨‍🍳👨🏿‍🍳👨🏻‍🍳👨🏾‍🍳👨🏼‍🍳👨🏽‍🍳👨‍🦱🕺🕺🏿🕺🏻🕺🏾🕺🏼🕺🏽👨🏿👨🏿‍🦲🧔🏿‍♂️🧔🏿‍♂👱🏿‍♂️👱🏿‍♂👨🏿‍🦱👨🏿‍🦰👨🏿‍🦳🕵️‍♂️🕵‍♂️🕵️‍♂🕵‍♂🕵🏿‍♂️🕵🏿‍♂🕵🏻‍♂️🕵🏻‍♂🕵🏾‍♂️🕵🏾‍♂🕵🏼‍♂️🕵🏼‍♂🕵🏽‍♂️🕵🏽‍♂🧝‍♂️🧝‍♂🧝🏿‍♂️🧝🏿‍♂🧝🏻‍♂️🧝🏻‍♂🧝🏾‍♂️🧝🏾‍♂🧝🏼‍♂️🧝🏼‍♂🧝🏽‍♂️🧝🏽‍♂🤦‍♂️🤦‍♂🤦🏿‍♂️🤦🏿‍♂🤦🏻‍♂️🤦🏻‍♂🤦🏾‍♂️🤦🏾‍♂🤦🏼‍♂️🤦🏼‍♂🤦🏽‍♂️🤦🏽‍♂👨‍🏭👨🏿‍🏭👨🏻‍🏭👨🏾‍🏭👨🏼‍🏭👨🏽‍🏭🧚‍♂️🧚‍♂🧚🏿‍♂️🧚🏿‍♂🧚🏻‍♂️🧚🏻‍♂🧚🏾‍♂️🧚🏾‍♂🧚🏼‍♂️🧚🏼‍♂🧚🏽‍♂️🧚🏽‍♂👨‍🌾👨🏿‍🌾👨🏻‍🌾👨🏾‍🌾👨🏼‍🌾👨🏽‍🌾👨‍🍼👨🏿‍🍼👨🏻‍🍼👨🏾‍🍼👨🏼‍🍼👨🏽‍🍼👨‍🚒👨🏿‍🚒👨🏻‍🚒👨🏾‍🚒👨🏼‍🚒👨🏽‍🚒🙍‍♂️🙍‍♂🙍🏿‍♂️🙍🏿‍♂🙍🏻‍♂️🙍🏻‍♂🙍🏾‍♂️🙍🏾‍♂🙍🏼‍♂️🙍🏼‍♂🙍🏽‍♂️🙍🏽‍♂🧞‍♂️🧞‍♂🙅‍♂️🙅‍♂🙅🏿‍♂️🙅🏿‍♂🙅🏻‍♂️🙅🏻‍♂🙅🏾‍♂️🙅🏾‍♂🙅🏼‍♂️🙅🏼‍♂🙅🏽‍♂️🙅🏽‍♂🙆‍♂️🙆‍♂🙆🏿‍♂️🙆🏿‍♂🙆🏻‍♂️🙆🏻‍♂🙆🏾‍♂️🙆🏾‍♂🙆🏼‍♂️🙆🏼‍♂🙆🏽‍♂️🙆🏽‍♂💇‍♂️💇‍♂💇🏿‍♂️💇🏿‍♂💇🏻‍♂️💇🏻‍♂💇🏾‍♂️💇🏾‍♂💇🏼‍♂️💇🏼‍♂💇🏽‍♂️💇🏽‍♂💆‍♂️💆‍♂💆🏿‍♂️💆🏿‍♂💆🏻‍♂️💆🏻‍♂💆🏾‍♂️💆🏾‍♂💆🏼‍♂️💆🏼‍♂💆🏽‍♂️💆🏽‍♂🏌️‍♂️🏌‍♂️🏌️‍♂🏌‍♂🏌🏿‍♂️🏌🏿‍♂🏌🏻‍♂️🏌🏻‍♂🏌🏾‍♂️🏌🏾‍♂🏌🏼‍♂️🏌🏼‍♂🏌🏽‍♂️🏌🏽‍♂💂‍♂️💂‍♂💂🏿‍♂️💂🏿‍♂💂🏻‍♂️💂🏻‍♂💂🏾‍♂️💂🏾‍♂💂🏼‍♂️💂🏼‍♂💂🏽‍♂️💂🏽‍♂👨‍⚕️👨‍⚕👨🏿‍⚕️👨🏿‍⚕👨🏻‍⚕️👨🏻‍⚕👨🏾‍⚕️👨🏾‍⚕👨🏼‍⚕️👨🏼‍⚕👨🏽‍⚕️👨🏽‍⚕🧘‍♂️🧘‍♂🧘🏿‍♂️🧘🏿‍♂🧘🏻‍♂️🧘🏻‍♂🧘🏾‍♂️🧘🏾‍♂🧘🏼‍♂️🧘🏼‍♂🧘🏽‍♂️🧘🏽‍♂👨‍🦽👨🏿‍🦽👨🏻‍🦽👨🏾‍🦽👨🏼‍🦽👨🏽‍🦽👨‍🦼👨🏿‍🦼👨🏻‍🦼👨🏾‍🦼👨🏼‍🦼👨🏽‍🦼🧖‍♂️🧖‍♂🧖🏿‍♂️🧖🏿‍♂🧖🏻‍♂️🧖🏻‍♂🧖🏾‍♂️🧖🏾‍♂🧖🏼‍♂️🧖🏼‍♂🧖🏽‍♂️🧖🏽‍♂🤵‍♂️🤵‍♂🤵🏿‍♂️🤵🏿‍♂🤵🏻‍♂️🤵🏻‍♂🤵🏾‍♂️🤵🏾‍♂🤵🏼‍♂️🤵🏼‍♂🤵🏽‍♂️🤵🏽‍♂👨‍⚖️👨‍⚖👨🏿‍⚖️👨🏿‍⚖👨🏻‍⚖️👨🏻‍⚖👨🏾‍⚖️👨🏾‍⚖👨🏼‍⚖️👨🏼‍⚖👨🏽‍⚖️👨🏽‍⚖🤹‍♂️🤹‍♂🤹🏿‍♂️🤹🏿‍♂🤹🏻‍♂️🤹🏻‍♂🤹🏾‍♂️🤹🏾‍♂🤹🏼‍♂️🤹🏼‍♂🤹🏽‍♂️🤹🏽‍♂🧎‍♂️🧎‍♂🧎🏿‍♂️🧎🏿‍♂🧎🏻‍♂️🧎🏻‍♂🧎🏾‍♂️🧎🏾‍♂🧎🏼‍♂️🧎🏼‍♂🧎🏽‍♂️🧎🏽‍♂🏋️‍♂️🏋‍♂️🏋️‍♂🏋‍♂🏋🏿‍♂️🏋🏿‍♂🏋🏻‍♂️🏋🏻‍♂🏋🏾‍♂️🏋🏾‍♂🏋🏼‍♂️🏋🏼‍♂🏋🏽‍♂️🏋🏽‍♂👨🏻👨🏻‍🦲🧔🏻‍♂️🧔🏻‍♂👱🏻‍♂️👱🏻‍♂👨🏻‍🦱👨🏻‍🦰👨🏻‍🦳🧙‍♂️🧙‍♂🧙🏿‍♂️🧙🏿‍♂🧙🏻‍♂️🧙🏻‍♂🧙🏾‍♂️🧙🏾‍♂🧙🏼‍♂️🧙🏼‍♂🧙🏽‍♂️🧙🏽‍♂👨‍🔧👨🏿‍🔧👨🏻‍🔧👨🏾‍🔧👨🏼‍🔧👨🏽‍🔧👨🏾👨🏾‍🦲🧔🏾‍♂️🧔🏾‍♂👱🏾‍♂️👱🏾‍♂👨🏾‍🦱👨🏾‍🦰👨🏾‍🦳👨🏼👨🏼‍🦲🧔🏼‍♂️🧔🏼‍♂👱🏼‍♂️👱🏼‍♂👨🏼‍🦱👨🏼‍🦰👨🏼‍🦳👨🏽👨🏽‍🦲🧔🏽‍♂️🧔🏽‍♂👱🏽‍♂️👱🏽‍♂👨🏽‍🦱👨🏽‍🦰👨🏽‍🦳🚵‍♂️🚵‍♂🚵🏿‍♂️🚵🏿‍♂🚵🏻‍♂️🚵🏻‍♂🚵🏾‍♂️🚵🏾‍♂🚵🏼‍♂️🚵🏼‍♂🚵🏽‍♂️🚵🏽‍♂👨‍💼👨🏿‍💼👨🏻‍💼👨🏾‍💼👨🏼‍💼👨🏽‍💼👨‍✈️👨‍✈👨🏿‍✈️👨🏿‍✈👨🏻‍✈️👨🏻‍✈👨🏾‍✈️👨🏾‍✈👨🏼‍✈️👨🏼‍✈👨🏽‍✈️👨🏽‍✈🤾‍♂️🤾‍♂🤾🏿‍♂️🤾🏿‍♂🤾🏻‍♂️🤾🏻‍♂🤾🏾‍♂️🤾🏾‍♂🤾🏼‍♂️🤾🏼‍♂🤾🏽‍♂️🤾🏽‍♂🤽‍♂️🤽‍♂🤽🏿‍♂️🤽🏿‍♂🤽🏻‍♂️🤽🏻‍♂🤽🏾‍♂️🤽🏾‍♂🤽🏼‍♂️🤽🏼‍♂🤽🏽‍♂️🤽🏽‍♂👮‍♂️👮‍♂👮🏿‍♂️👮🏿‍♂👮🏻‍♂️👮🏻‍♂👮🏾‍♂️👮🏾‍♂👮🏼‍♂️👮🏼‍♂👮🏽‍♂️👮🏽‍♂🙎‍♂️🙎‍♂🙎🏿‍♂️🙎🏿‍♂🙎🏻‍♂️🙎🏻‍♂🙎🏾‍♂️🙎🏾‍♂🙎🏼‍♂️🙎🏼‍♂🙎🏽‍♂️🙎🏽‍♂🙋‍♂️🙋‍♂🙋🏿‍♂️🙋🏿‍♂🙋🏻‍♂️🙋🏻‍♂🙋🏾‍♂️🙋🏾‍♂🙋🏼‍♂️🙋🏼‍♂🙋🏽‍♂️🙋🏽‍♂👨‍🦰🚣‍♂️🚣‍♂🚣🏿‍♂️🚣🏿‍♂🚣🏻‍♂️🚣🏻‍♂🚣🏾‍♂️🚣🏾‍♂🚣🏼‍♂️🚣🏼‍♂🚣🏽‍♂️🚣🏽‍♂🏃‍♂️🏃‍♂🏃🏿‍♂️🏃🏿‍♂🏃🏻‍♂️🏃🏻‍♂🏃🏾‍♂️🏃🏾‍♂🏃🏼‍♂️🏃🏼‍♂🏃🏽‍♂️🏃🏽‍♂👨‍🔬👨🏿‍🔬👨🏻‍🔬👨🏾‍🔬👨🏼‍🔬👨🏽‍🔬🤷‍♂️🤷‍♂🤷🏿‍♂️🤷🏿‍♂🤷🏻‍♂️🤷🏻‍♂🤷🏾‍♂️🤷🏾‍♂🤷🏼‍♂️🤷🏼‍♂🤷🏽‍♂️🤷🏽‍♂👨‍🎤👨🏿‍🎤👨🏻‍🎤👨🏾‍🎤👨🏼‍🎤👨🏽‍🎤🧍‍♂️🧍‍♂🧍🏿‍♂️🧍🏿‍♂🧍🏻‍♂️🧍🏻‍♂🧍🏾‍♂️🧍🏾‍♂🧍🏼‍♂️🧍🏼‍♂🧍🏽‍♂️🧍🏽‍♂👨‍🎓👨🏿‍🎓👨🏻‍🎓👨🏾‍🎓👨🏼‍🎓👨🏽‍🎓🦸‍♂️🦸‍♂🦸🏿‍♂️🦸🏿‍♂🦸🏻‍♂️🦸🏻‍♂🦸🏾‍♂️🦸🏾‍♂🦸🏼‍♂️🦸🏼‍♂🦸🏽‍♂️🦸🏽‍♂🦹‍♂️🦹‍♂🦹🏿‍♂️🦹🏿‍♂🦹🏻‍♂️🦹🏻‍♂🦹🏾‍♂️🦹🏾‍♂🦹🏼‍♂️🦹🏼‍♂🦹🏽‍♂️🦹🏽‍♂🏄‍♂️🏄‍♂🏄🏿‍♂️🏄🏿‍♂🏄🏻‍♂️🏄🏻‍♂🏄🏾‍♂️🏄🏾‍♂🏄🏼‍♂️🏄🏼‍♂🏄🏽‍♂️🏄🏽‍♂🏊‍♂️🏊‍♂🏊🏿‍♂️🏊🏿‍♂🏊🏻‍♂️🏊🏻‍♂🏊🏾‍♂️🏊🏾‍♂🏊🏼‍♂️🏊🏼‍♂🏊🏽‍♂️🏊🏽‍♂👨‍🏫👨🏿‍🏫👨🏻‍🏫👨🏾‍🏫👨🏼‍🏫👨🏽‍🏫👨‍💻👨🏿‍💻👨🏻‍💻👨🏾‍💻👨🏼‍💻👨🏽‍💻💁‍♂️💁‍♂💁🏿‍♂️💁🏿‍♂💁🏻‍♂️💁🏻‍♂💁🏾‍♂️💁🏾‍♂💁🏼‍♂️💁🏼‍♂💁🏽‍♂️💁🏽‍♂🧛‍♂️🧛‍♂🧛🏿‍♂️🧛🏿‍♂🧛🏻‍♂️🧛🏻‍♂🧛🏾‍♂️🧛🏾‍♂🧛🏼‍♂️🧛🏼‍♂🧛🏽‍♂️🧛🏽‍♂🚶‍♂️🚶‍♂🚶🏿‍♂️🚶🏿‍♂🚶🏻‍♂️🚶🏻‍♂🚶🏾‍♂️🚶🏾‍♂🚶🏼‍♂️🚶🏼‍♂🚶🏽‍♂️🚶🏽‍♂👳‍♂️👳‍♂👳🏿‍♂️👳🏿‍♂👳🏻‍♂️👳🏻‍♂👳🏾‍♂️👳🏾‍♂👳🏼‍♂️👳🏼‍♂👳🏽‍♂️👳🏽‍♂👨‍🦳👰‍♂️👰‍♂👰🏿‍♂️👰🏿‍♂👰🏻‍♂️
👰🏻‍♂👰🏾‍♂️👰🏾‍♂👰🏼‍♂️👰🏼‍♂👰🏽‍♂️👰🏽‍♂👨‍🦯👨🏿‍🦯👨🏻‍🦯👨🏾‍🦯👨🏼‍🦯👨🏽‍🦯🧟‍♂️🧟‍♂🥭🕰️🕰🦽👞🗾🍁🪇🥋🧉🍖🧑‍🔧🧑🏿‍🔧🧑🏻‍🔧🧑🏾‍🔧🧑🏼‍🔧🧑🏽‍🔧🦾🦿⚕️⚕🏾🏼🏽📣🍈🫠📝👬👬🏿👨🏿‍🤝‍👨🏻👨🏿‍🤝‍👨🏾👨🏿‍🤝‍👨🏼👨🏿‍🤝‍👨🏽👬🏻👨🏻‍🤝‍👨🏿👨🏻‍🤝‍👨🏾👨🏻‍🤝‍👨🏼👨🏻‍🤝‍👨🏽👬🏾👨🏾‍🤝‍👨🏿👨🏾‍🤝‍👨🏻👨🏾‍🤝‍👨🏼👨🏾‍🤝‍👨🏽👬🏼👨🏼‍🤝‍👨🏿👨🏼‍🤝‍👨🏻👨🏼‍🤝‍👨🏾👨🏼‍🤝‍👨🏽👬🏽👨🏽‍🤝‍👨🏿👨🏽‍🤝‍👨🏻👨🏽‍🤝‍👨🏾👨🏽‍🤝‍👨🏼👯‍♂️👯‍♂🤼‍♂️🤼‍♂❤️‍🩹❤‍🩹🕎🚹🧜‍♀️🧜‍♀🧜🏿‍♀️🧜🏿‍♀🧜🏻‍♀️🧜🏻‍♀🧜🏾‍♀️🧜🏾‍♀🧜🏼‍♀️🧜🏼‍♀🧜🏽‍♀️🧜🏽‍♀🧜‍♂️🧜‍♂🧜🏿‍♂️🧜🏿‍♂🧜🏻‍♂️🧜🏻‍♂🧜🏾‍♂️🧜🏾‍♂🧜🏼‍♂️🧜🏼‍♂🧜🏽‍♂️🧜🏽‍♂🧜🧜🏿🧜🏻🧜🏾🧜🏼🧜🏽🚇🦠🎤🔬🖕🖕🏿🖕🏻🖕🏾🖕🏼🖕🏽🪖🎖️🎖🌌🚐➖🪞🪩🗿📱📴📲🤑💰💸🐒🐵🚝🥮🎑🫎🕌🦟🛥️🛥🛵🏍️🏍🦼🛣️🛣🗻⛰️⛰🚠🚞🐁🐭🪤👄🎥✖️✖🍄🎹🎵🎶🎼🔇🧑‍🎄🧑🏿‍🎄🧑🏻‍🎄🧑🏾‍🎄🧑🏼‍🎄🧑🏽‍🎄💅💅🏿💅🏻💅🏾💅🏼💅🏽📛🏞️🏞🤢🧿👔🤓🪺🪆😐🌑🌚📰⏭️⏭🌃🕤🕘🥷🥷🏿🥷🏻🥷🏾🥷🏼🥷🏽🚳⛔🚯📵🔞🚷🚭🚱👃👃🏿👃🏻👃🏾👃🏼👃🏽📓📔🔩🐙🍢🏢🧑‍💼🧑🏿‍💼🧑🏻‍💼🧑🏾‍💼🧑🏼‍💼🧑🏽‍💼👹🛢️🛢🗝️🗝👴👴🏿👴🏻👴🏾👴🏼👴🏽👵👵🏿👵🏻👵🏾👵🏼👵🏽🧓🧓🏿🧓🏻🧓🏾🧓🏼🧓🏽🫒🕉️🕉🚘🚍👊👊🏿👊🏻👊🏾👊🏼👊🏽🚔🚖🩱🕜🕐🧅📖📂👐👐🏿👐🏻👐🏾👐🏼👐🏽📭📬💿📙🟠🧡🟧🦧☦️☦🦦📤🦉🐂🦪📦📄📃📟🖌️🖌🫳🫳🏿🫳🏻🫳🏾🫳🏼🫳🏽🌴🫴🫴🏿🫴🏻🫴🏾🫴🏼🫴🏽🤲🤲🏿🤲🏻🤲🏾🤲🏼🤲🏽🥞🐼📎🪂🦜〽️〽🎉🥳🛳️🛳🛂⏸️⏸🐾🫛☮️☮🍑🦚🥜🍐🖊️🖊✏️✏🐧😔🧑‍🤝‍🧑🧑🏿‍🤝‍🧑🏿🧑🏿‍🤝‍🧑🏻🧑🏿‍🤝‍🧑🏾🧑🏿‍🤝‍🧑🏼🧑🏿‍🤝‍🧑🏽🧑🏻‍🤝‍🧑🏻🧑🏻‍🤝‍🧑🏿🧑🏻‍🤝‍🧑🏾🧑🏻‍🤝‍🧑🏼🧑🏻‍🤝‍🧑🏽🧑🏾‍🤝‍🧑🏾🧑🏾‍🤝‍🧑🏿🧑🏾‍🤝‍🧑🏻🧑🏾‍🤝‍🧑🏼🧑🏾‍🤝‍🧑🏽🧑🏼‍🤝‍🧑🏼🧑🏼‍🤝‍🧑🏿🧑🏼‍🤝‍🧑🏻🧑🏼‍🤝‍🧑🏾🧑🏼‍🤝‍🧑🏽🧑🏽‍🤝‍🧑🏽🧑🏽‍🤝‍🧑🏿🧑🏽‍🤝‍🧑🏻🧑🏽‍🤝‍🧑🏾🧑🏽‍🤝‍🧑🏼🫂👯🤼🎭😣🧑🧑‍🦲🧔🚴🚴🏿🚴🏻🚴🏾🚴🏼🚴🏽👱⛹️⛹⛹🏿⛹🏻⛹🏾⛹🏼⛹🏽🙇🙇🏿🙇🏻🙇🏾🙇🏼🙇🏽🤸🤸🏿🤸🏻🤸🏾🤸🏼🤸🏽🧗🧗🏿🧗🏻🧗🏾🧗🏼🧗🏽🧑‍🦱🧑🏿🧑🏿‍🦲🧔🏿👱🏿🧑🏿‍🦱🧑🏿‍🦰🧑🏿‍🦳🤦🤦🏿🤦🏻🤦🏾🤦🏼🤦🏽🧑‍🍼🧑🏿‍🍼🧑🏻‍🍼🧑🏾‍🍼🧑🏼‍🍼🧑🏽‍🍼🤺🙍🙍🏿🙍🏻🙍🏾🙍🏼🙍🏽🙅🙅🏿🙅🏻🙅🏾🙅🏼🙅🏽🙆🙆🏿🙆🏻🙆🏾🙆🏼🙆🏽💇💇🏿💇🏻💇🏾💇🏼💇🏽💆💆🏿💆🏻💆🏾💆🏼💆🏽🏌️🏌🏌🏿🏌🏻🏌🏾🏌🏼🏌🏽🛌🛌🏿🛌🏻🛌🏾🛌🏼🛌🏽🧘🧘🏿🧘🏻🧘🏾🧘🏼🧘🏽🧑‍🦽🧑🏿‍🦽🧑🏻‍🦽🧑🏾‍🦽🧑🏼‍🦽🧑🏽‍🦽🧑‍🦼🧑🏿‍🦼🧑🏻‍🦼🧑🏾‍🦼🧑🏼‍🦼🧑🏽‍🦼🧖🧖🏿🧖🏻🧖🏾🧖🏼🧖🏽🕴️🕴🕴🏿🕴🏻🕴🏾🕴🏼🕴🏽🤵🤵🏿🤵🏻🤵🏾🤵🏼🤵🏽🤹🤹🏿🤹🏻🤹🏾🤹🏼🤹🏽🧎🧎🏿🧎🏻🧎🏾🧎🏼🧎🏽🏋️🏋🏋🏿🏋🏻🏋🏾🏋🏼🏋🏽🧑🏻🧑🏻‍🦲🧔🏻👱🏻🧑🏻‍🦱🧑🏻‍🦰🧑🏻‍🦳🧑🏾🧑🏾‍🦲🧔🏾👱🏾🧑🏾‍🦱🧑🏾‍🦰🧑🏾‍🦳🧑🏼🧑🏼‍🦲🧔🏼👱🏼🧑🏼‍🦱🧑🏼‍🦰🧑🏼‍🦳🧑🏽🧑🏽‍🦲🧔🏽👱🏽🧑🏽‍🦱🧑🏽‍🦰🧑🏽‍🦳🚵🚵🏿🚵🏻🚵🏾🚵🏼🚵🏽🤾🤾🏿🤾🏻🤾🏾🤾🏼🤾🏽🤽🤽🏿🤽🏻🤽🏾🤽🏼🤽🏽🙎🙎🏿🙎🏻🙎🏾🙎🏼🙎🏽🙋🙋🏿🙋🏻🙋🏾🙋🏼🙋🏽🧑‍🦰🚣🚣🏿🚣🏻🚣🏾🚣🏼🚣🏽🏃🏃🏿🏃🏻🏃🏾🏃🏼🏃🏽🤷🤷🏿🤷🏻🤷🏾🤷🏼🤷🏽🧍🧍🏿🧍🏻🧍🏾🧍🏼🧍🏽🏄🏄🏿🏄🏻🏄🏾🏄🏼🏄🏽🏊🏊🏿🏊🏻🏊🏾🏊🏼🏊🏽🛀🛀🏿🛀🏻🛀🏾🛀🏼🛀🏽💁💁🏿💁🏻💁🏾💁🏼💁🏽🚶🚶🏿🚶🏻🚶🏾🚶🏼🚶🏽👳👳🏿👳🏻👳🏾👳🏼👳🏽🧑‍🦳🫅🫅🏿🫅🏻🫅🏾🫅🏼🫅🏽👲👲🏿👲🏻👲🏾👲🏼👲🏽👰👰🏿👰🏻👰🏾👰🏼👰🏽🧑‍🦯🧑🏿‍🦯🧑🏻‍🦯🧑🏾‍🦯🧑🏼‍🦯🧑🏽‍🦯🧫⛏️⛏🛻🥧🐖🐷🐽💩💊🧑‍✈️🧑‍✈🧑🏿‍✈️🧑🏿‍✈🧑🏻‍✈️🧑🏻‍✈🧑🏾‍✈️🧑🏾‍✈🧑🏼‍✈️🧑🏼‍✈🧑🏽‍✈️🧑🏽‍✈🤌🤌🏿🤌🏻🤌🏾🤌🏼🤌🏽🤏🤏🏿🤏🏻🤏🏾🤏🏼🤏🏽🎍🍍🏓🩷🏴‍☠️🏴‍☠🍕🪅🪧🛐▶️▶⏯️⏯🛝🥺🪠➕🐻‍❄️🐻‍❄🚓🚨👮👮🏿👮🏻👮🏾👮🏼👮🏽🐩🎱🍿🏤📯📮🍲🚰🥔🪴🍗💷🫗😾📿🫃🫃🏿🫃🏻🫃🏾🫃🏼🫃🏽🫄🫄🏿🫄🏻🫄🏾🫄🏼🫄🏽🤰🤰🏿🤰🏻🤰🏾🤰🏼🤰🏽🥨🤴🤴🏿🤴🏻🤴🏾🤴🏼🤴🏽👸👸🏿👸🏻👸🏾👸🏼👸🏽🖨️🖨🚫🟣💜🟪👛📌🧩🐇🐰🦝🏎️🏎📻🔘☢️☢🚃🛤️🛤🌈🏳️‍🌈🏳‍🌈🤚🤚🏿🤚🏻🤚🏾🤚🏼🤚🏽✊✊🏿✊🏻✊🏾✊🏼✊🏽✋✋🏿✋🏻✋🏾✋🏼✋🏽🙌🙌🏿🙌🏻🙌🏾🙌🏼🙌🏽🐏🐀🪒🧾⏺️⏺♻️♻🍎🔴🧧❗🦰❤️❤🏮❓🟥🔻🔺®️®😌🎗️🎗🔁🔂⛑️⛑🚻◀️◀💞🦏🎀🍙🍘🤜🤜🏿🤜🏻🤜🏾🤜🏼🤜🏽🗯️🗯➡️➡⤵️⤵↩️↩⤴️⤴🫱🫱🏿🫱🏻🫱🏾🫱🏼🫱🏽🫸🫸🏿🫸🏻🫸🏾🫸🏼🫸🏽💍🛟🪐🍠🤖🪨🚀🧻🗞️🗞🎢🛼🤣🐓🌹🏵️🏵📍🏉🎽👟😥🧷🦺⛵🍶🧂🫡🥪🥻🛰️🛰📡🦕🎷🧣🏫🧑‍🔬🧑🏿‍🔬🧑🏻‍🔬🧑🏾‍🔬🧑🏼‍🔬🧑🏽‍🔬✂️✂🦂🪛📜🦭💺🙈🌱🤳🤳🏿🤳🏻🤳🏾🤳🏼🤳🏽🐕‍🦺🕢🕖🪡🫨🥘☘️☘🦈🍧🌾🛡️🛡⛩️⛩🚢🌠🛍️🛍🛒🍰🩳🚿🦐🔀🤫🤘🤘🏿🤘🏻🤘🏾🤘🏼🤘🏽🧑‍🎤🧑🏿‍🎤🧑🏻‍🎤🧑🏾‍🎤🧑🏼‍🎤🧑🏽‍🎤🕡🕕🛹⛷️⛷🎿💀☠️☠🦨🛷😴😪🙁🙂🎰🦥🛩️🛩🔹🔸😻☺️☺😇😍🥰😈🤗😊😎🥲😏🐌🐍🤧🏔️🏔🏂🏂🏿🏂🏻🏂🏾🏂🏼🏂🏽❄️❄☃️☃⛄🧼⚽🧦🍦🥎♠️♠🍝❇️❇🎇✨💖🙊🔊🔈🔉🗣️🗣💬🚤🕷️🕷🕸️🕸🗓️🗓🗒️🗒🐚🧽🥄🚙🏅🐳🦑😝🏟️🏟⭐🤩☪️☪✡️✡🚉🍜🩺⏹️⏹🛑⏱️⏱📏🍓🧑‍🎓🧑🏿‍🎓🧑🏻‍🎓🧑🏾‍🎓🧑🏼‍🎓🧑🏽‍🎓🎙️🎙🥙☀️☀⛅🌥️🌥🌦️🌦🌤️🌤🌞🌻🕶️🕶🌅🌄🌇🦸🦸🏿🦸🏻🦸🏾🦸🏼🦸🏽🦹🦹🏿🦹🏻🦹🏾🦹🏼🦹🏽🍣🚟🦢💦🕍💉👕🌮🥡🫔🎋🍊🚕🧑‍🏫🧑🏿‍🏫🧑🏻‍🏫🧑🏾‍🏫🧑🏼‍🏫🧑🏽‍🏫🍵🫖📆🧑‍💻🧑🏿‍💻🧑🏻‍💻🧑🏾‍💻🧑🏼‍💻🧑🏽‍💻🧸☎️☎📞🔭📺🕥🕙🎾⛺🧪🌡️🌡🤔🩴💭🧵🕞🕒👎👎🏿👎🏻👎🏾👎🏼👎🏽👍👍🏿👍🏻👍🏾👍🏼👍🏽🎫🐅🐯⏲️⏲😫🚽🍅👅🧰🦷🪥🎩🌪️🌪🖲️🖲🚜™️™🚆🚊🚋🏳️‍⚧️🏳‍⚧️🏳️‍⚧🏳‍⚧⚧️⚧🚩📐🔱🧌🚎🏆🍹🐠🎺🌷🥃🦃🐢🕧🕛🐫🕝💕🕑☂️☂⛱️⛱☔😒🦄🔓↕️↕↖️↖↗️↗⬆️⬆🙃🔼🧛🧛🏿🧛🏻🧛🏾🧛🏼🧛🏽🚦📳✌️✌✌🏿✌🏻✌🏾✌🏼✌🏽📹🎮📼🎻🌋🏐🖖🖖🏿🖖🏻🖖🏾🖖🏼🖖🏽🧇🌘🌖⚠️⚠🗑️🗑⌚🐃🚾🔫🌊🍉👋👋🏿👋🏻👋🏾👋🏼👋🏽〰️〰🌒🌔🙀😩💒🐋🛞☸️☸♿🦯⚪❕🏳️🏳💮🦳🤍⬜◽◻️◻❔▫️▫🔳🥀🎐🌬️🌬🪟🍷🪽😉😜🛜🐺👩👫👫🏿👩🏿‍🤝‍👨🏻👩🏿‍🤝‍👨🏾👩🏿‍🤝‍👨🏼👩🏿‍🤝‍👨🏽👫🏻👩🏻‍🤝‍👨🏿👩🏻‍🤝‍👨🏾👩🏻‍🤝‍👨🏼👩🏻‍🤝‍👨🏽👫🏾👩🏾‍🤝‍👨🏿👩🏾‍🤝‍👨🏻👩🏾‍🤝‍👨🏼👩🏾‍🤝‍👨🏽👫🏼👩🏼‍🤝‍👨🏿👩🏼‍🤝‍👨🏻👩🏼‍🤝‍👨🏾👩🏼‍🤝‍👨🏽👫🏽👩🏽‍🤝‍👨🏿👩🏽‍🤝‍👨🏻👩🏽‍🤝‍👨🏾👩🏽‍🤝‍👨🏼👩‍🎨👩🏿‍🎨👩🏻‍🎨👩🏾‍🎨👩🏼‍🎨👩🏽‍🎨👩‍🚀👩🏿‍🚀👩🏻‍🚀👩🏾‍🚀👩🏼‍🚀👩🏽‍🚀👩‍🦲🧔‍♀️🧔‍♀🚴‍♀️🚴‍♀🚴🏿‍♀️🚴🏿‍♀🚴🏻‍♀️🚴🏻‍♀🚴🏾‍♀️🚴🏾‍♀🚴🏼‍♀️🚴🏼‍♀🚴🏽‍♀️🚴🏽‍♀👱‍♀️👱‍♀⛹️‍♀️⛹‍♀️⛹️‍♀⛹‍♀⛹🏿‍♀️⛹🏿‍♀⛹🏻‍♀️⛹🏻‍♀⛹🏾‍♀️⛹🏾‍♀⛹🏼‍♀️⛹🏼‍♀⛹🏽‍♀️⛹🏽‍♀🙇‍♀️🙇‍♀🙇🏿‍♀️🙇🏿‍♀🙇🏻‍♀️🙇🏻‍♀🙇🏾‍♀️🙇🏾‍♀🙇🏼‍♀️🙇🏼‍♀🙇🏽‍♀️🙇🏽‍♀🤸‍♀️🤸‍♀🤸🏿‍♀️🤸🏿‍♀🤸🏻‍♀️🤸🏻‍♀🤸🏾‍♀️🤸🏾‍♀🤸🏼‍♀️🤸🏼‍♀🤸🏽‍♀️🤸🏽‍♀🧗‍♀️🧗‍♀🧗🏿‍♀️🧗🏿‍♀🧗🏻‍♀️🧗🏻‍♀🧗🏾‍♀️🧗🏾‍♀🧗🏼‍♀️🧗🏼‍♀🧗🏽‍♀️🧗🏽‍♀👷‍♀️👷‍♀👷🏿‍♀️👷🏿‍♀👷🏻‍♀️👷🏻‍♀👷🏾‍♀️👷🏾‍♀👷🏼‍♀️👷🏼‍♀👷🏽‍♀️👷🏽‍♀👩‍🍳👩🏿‍🍳👩🏻‍🍳👩🏾‍🍳👩🏼‍🍳👩🏽‍🍳👩‍🦱💃💃🏿💃🏻💃🏾💃🏼💃🏽👩🏿👩🏿‍🦲🧔🏿‍♀️🧔🏿‍♀👱🏿‍♀️👱🏿‍♀👩🏿‍🦱👩🏿‍🦰👩🏿‍🦳🕵️‍♀️🕵‍♀️🕵️‍♀🕵‍♀🕵🏿‍♀️🕵🏿‍♀🕵🏻‍♀️🕵🏻‍♀🕵🏾‍♀️🕵🏾‍♀🕵🏼‍♀️🕵🏼‍♀🕵🏽‍♀️🕵🏽‍♀🧝‍♀️🧝‍♀🧝🏿‍♀️🧝🏿‍♀🧝🏻‍♀️🧝🏻‍♀🧝🏾‍♀️🧝🏾‍♀🧝🏼‍♀️🧝🏼‍♀🧝🏽‍♀️🧝🏽‍♀
🤦‍♀️🤦‍♀🤦🏿‍♀️🤦🏿‍♀🤦🏻‍♀️🤦🏻‍♀🤦🏾‍♀️🤦🏾‍♀🤦🏼‍♀️🤦🏼‍♀🤦🏽‍♀️🤦🏽‍♀👩‍🏭👩🏿‍🏭👩🏻‍🏭👩🏾‍🏭👩🏼‍🏭👩🏽‍🏭🧚‍♀️🧚‍♀🧚🏿‍♀️🧚🏿‍♀🧚🏻‍♀️🧚🏻‍♀🧚🏾‍♀️🧚🏾‍♀🧚🏼‍♀️🧚🏼‍♀🧚🏽‍♀️🧚🏽‍♀👩‍🌾👩🏿‍🌾👩🏻‍🌾👩🏾‍🌾👩🏼‍🌾👩🏽‍🌾👩‍🍼👩🏿‍🍼👩🏻‍🍼👩🏾‍🍼👩🏼‍🍼👩🏽‍🍼👩‍🚒👩🏿‍🚒👩🏻‍🚒👩🏾‍🚒👩🏼‍🚒👩🏽‍🚒🙍‍♀️🙍‍♀🙍🏿‍♀️🙍🏿‍♀🙍🏻‍♀️🙍🏻‍♀🙍🏾‍♀️🙍🏾‍♀🙍🏼‍♀️🙍🏼‍♀🙍🏽‍♀️🙍🏽‍♀🧞‍♀️🧞‍♀🙅‍♀️🙅‍♀🙅🏿‍♀️🙅🏿‍♀🙅🏻‍♀️🙅🏻‍♀🙅🏾‍♀️🙅🏾‍♀🙅🏼‍♀️🙅🏼‍♀🙅🏽‍♀️🙅🏽‍♀🙆‍♀️🙆‍♀🙆🏿‍♀️🙆🏿‍♀🙆🏻‍♀️🙆🏻‍♀🙆🏾‍♀️🙆🏾‍♀🙆🏼‍♀️🙆🏼‍♀🙆🏽‍♀️🙆🏽‍♀💇‍♀️💇‍♀💇🏿‍♀️💇🏿‍♀💇🏻‍♀️💇🏻‍♀💇🏾‍♀️💇🏾‍♀💇🏼‍♀️💇🏼‍♀💇🏽‍♀️💇🏽‍♀💆‍♀️💆‍♀💆🏿‍♀️💆🏿‍♀💆🏻‍♀️💆🏻‍♀💆🏾‍♀️💆🏾‍♀💆🏼‍♀️💆🏼‍♀💆🏽‍♀️💆🏽‍♀🏌️‍♀️🏌‍♀️🏌️‍♀🏌‍♀🏌🏿‍♀️🏌🏿‍♀🏌🏻‍♀️🏌🏻‍♀🏌🏾‍♀️🏌🏾‍♀🏌🏼‍♀️🏌🏼‍♀🏌🏽‍♀️🏌🏽‍♀💂‍♀️💂‍♀💂🏿‍♀️💂🏿‍♀💂🏻‍♀️💂🏻‍♀💂🏾‍♀️💂🏾‍♀💂🏼‍♀️💂🏼‍♀💂🏽‍♀️💂🏽‍♀👩‍⚕️👩‍⚕👩🏿‍⚕️👩🏿‍⚕👩🏻‍⚕️👩🏻‍⚕👩🏾‍⚕️👩🏾‍⚕👩🏼‍⚕️👩🏼‍⚕👩🏽‍⚕️👩🏽‍⚕🧘‍♀️🧘‍♀🧘🏿‍♀️🧘🏿‍♀🧘🏻‍♀️🧘🏻‍♀🧘🏾‍♀️🧘🏾‍♀🧘🏼‍♀️🧘🏼‍♀🧘🏽‍♀️🧘🏽‍♀👩‍🦽👩🏿‍🦽👩🏻‍🦽👩🏾‍🦽👩🏼‍🦽👩🏽‍🦽👩‍🦼👩🏿‍🦼👩🏻‍🦼👩🏾‍🦼👩🏼‍🦼👩🏽‍🦼🧖‍♀️🧖‍♀🧖🏿‍♀️🧖🏿‍♀🧖🏻‍♀️🧖🏻‍♀🧖🏾‍♀️🧖🏾‍♀🧖🏼‍♀️🧖🏼‍♀🧖🏽‍♀️🧖🏽‍♀🤵‍♀️🤵‍♀🤵🏿‍♀️🤵🏿‍♀🤵🏻‍♀️🤵🏻‍♀🤵🏾‍♀️🤵🏾‍♀🤵🏼‍♀️🤵🏼‍♀🤵🏽‍♀️🤵🏽‍♀👩‍⚖️👩‍⚖👩🏿‍⚖️👩🏿‍⚖👩🏻‍⚖️👩🏻‍⚖👩🏾‍⚖️👩🏾‍⚖👩🏼‍⚖️👩🏼‍⚖👩🏽‍⚖️👩🏽‍⚖🤹‍♀️🤹‍♀🤹🏿‍♀️🤹🏿‍♀🤹🏻‍♀️🤹🏻‍♀🤹🏾‍♀️🤹🏾‍♀🤹🏼‍♀️🤹🏼‍♀🤹🏽‍♀️🤹🏽‍♀🧎‍♀️🧎‍♀🧎🏿‍♀️🧎🏿‍♀🧎🏻‍♀️🧎🏻‍♀🧎🏾‍♀️🧎🏾‍♀🧎🏼‍♀️🧎🏼‍♀🧎🏽‍♀️🧎🏽‍♀🏋️‍♀️🏋‍♀️🏋️‍♀🏋‍♀🏋🏿‍♀️🏋🏿‍♀🏋🏻‍♀️🏋🏻‍♀🏋🏾‍♀️🏋🏾‍♀🏋🏼‍♀️🏋🏼‍♀🏋🏽‍♀️🏋🏽‍♀👩🏻👩🏻‍🦲🧔🏻‍♀️🧔🏻‍♀👱🏻‍♀️👱🏻‍♀👩🏻‍🦱👩🏻‍🦰👩🏻‍🦳🧙‍♀️🧙‍♀🧙🏿‍♀️🧙🏿‍♀🧙🏻‍♀️🧙🏻‍♀🧙🏾‍♀️🧙🏾‍♀🧙🏼‍♀️🧙🏼‍♀🧙🏽‍♀️🧙🏽‍♀👩‍🔧👩🏿‍🔧👩🏻‍🔧👩🏾‍🔧👩🏼‍🔧👩🏽‍🔧👩🏾👩🏾‍🦲🧔🏾‍♀️🧔🏾‍♀👱🏾‍♀️👱🏾‍♀👩🏾‍🦱👩🏾‍🦰👩🏾‍🦳👩🏼👩🏼‍🦲🧔🏼‍♀️🧔🏼‍♀👱🏼‍♀️👱🏼‍♀👩🏼‍🦱👩🏼‍🦰👩🏼‍🦳👩🏽👩🏽‍🦲🧔🏽‍♀️🧔🏽‍♀👱🏽‍♀️👱🏽‍♀👩🏽‍🦱👩🏽‍🦰👩🏽‍🦳🚵‍♀️🚵‍♀🚵🏿‍♀️🚵🏿‍♀🚵🏻‍♀️🚵🏻‍♀🚵🏾‍♀️🚵🏾‍♀🚵🏼‍♀️🚵🏼‍♀🚵🏽‍♀️🚵🏽‍♀👩‍💼👩🏿‍💼👩🏻‍💼👩🏾‍💼👩🏼‍💼👩🏽‍💼👩‍✈️👩‍✈👩🏿‍✈️👩🏿‍✈👩🏻‍✈️👩🏻‍✈👩🏾‍✈️👩🏾‍✈👩🏼‍✈️👩🏼‍✈👩🏽‍✈️👩🏽‍✈🤾‍♀️🤾‍♀🤾🏿‍♀️🤾🏿‍♀🤾🏻‍♀️🤾🏻‍♀🤾🏾‍♀️🤾🏾‍♀🤾🏼‍♀️🤾🏼‍♀🤾🏽‍♀️🤾🏽‍♀🤽‍♀️🤽‍♀🤽🏿‍♀️🤽🏿‍♀🤽🏻‍♀️🤽🏻‍♀🤽🏾‍♀️🤽🏾‍♀🤽🏼‍♀️🤽🏼‍♀🤽🏽‍♀️🤽🏽‍♀👮‍♀️👮‍♀👮🏿‍♀️👮🏿‍♀👮🏻‍♀️👮🏻‍♀👮🏾‍♀️👮🏾‍♀👮🏼‍♀️👮🏼‍♀👮🏽‍♀️👮🏽‍♀🙎‍♀️🙎‍♀🙎🏿‍♀️🙎🏿‍♀🙎🏻‍♀️🙎🏻‍♀🙎🏾‍♀️🙎🏾‍♀🙎🏼‍♀️🙎🏼‍♀🙎🏽‍♀️🙎🏽‍♀🙋‍♀️🙋‍♀🙋🏿‍♀️🙋🏿‍♀🙋🏻‍♀️🙋🏻‍♀🙋🏾‍♀️🙋🏾‍♀🙋🏼‍♀️🙋🏼‍♀🙋🏽‍♀️🙋🏽‍♀👩‍🦰🚣‍♀️🚣‍♀🚣🏿‍♀️🚣🏿‍♀🚣🏻‍♀️🚣🏻‍♀🚣🏾‍♀️🚣🏾‍♀🚣🏼‍♀️🚣🏼‍♀🚣🏽‍♀️🚣🏽‍♀🏃‍♀️🏃‍♀🏃🏿‍♀️🏃🏿‍♀🏃🏻‍♀️🏃🏻‍♀🏃🏾‍♀️🏃🏾‍♀🏃🏼‍♀️🏃🏼‍♀🏃🏽‍♀️🏃🏽‍♀👩‍🔬👩🏿‍🔬👩🏻‍🔬👩🏾‍🔬👩🏼‍🔬👩🏽‍🔬🤷‍♀️🤷‍♀🤷🏿‍♀️🤷🏿‍♀🤷🏻‍♀️🤷🏻‍♀🤷🏾‍♀️🤷🏾‍♀🤷🏼‍♀️🤷🏼‍♀🤷🏽‍♀️🤷🏽‍♀👩‍🎤👩🏿‍🎤👩🏻‍🎤👩🏾‍🎤👩🏼‍🎤👩🏽‍🎤🧍‍♀️🧍‍♀🧍🏿‍♀️🧍🏿‍♀🧍🏻‍♀️🧍🏻‍♀🧍🏾‍♀️🧍🏾‍♀🧍🏼‍♀️🧍🏼‍♀🧍🏽‍♀️🧍🏽‍♀👩‍🎓👩🏿‍🎓👩🏻‍🎓👩🏾‍🎓👩🏼‍🎓👩🏽‍🎓🦸‍♀️🦸‍♀🦸🏿‍♀️🦸🏿‍♀🦸🏻‍♀️🦸🏻‍♀🦸🏾‍♀️🦸🏾‍♀🦸🏼‍♀️🦸🏼‍♀🦸🏽‍♀️🦸🏽‍♀🦹‍♀️🦹‍♀🦹🏿‍♀️🦹🏿‍♀🦹🏻‍♀️🦹🏻‍♀🦹🏾‍♀️🦹🏾‍♀🦹🏼‍♀️🦹🏼‍♀🦹🏽‍♀️🦹🏽‍♀🏄‍♀️🏄‍♀🏄🏿‍♀️🏄🏿‍♀🏄🏻‍♀️🏄🏻‍♀🏄🏾‍♀️🏄🏾‍♀🏄🏼‍♀️🏄🏼‍♀🏄🏽‍♀️🏄🏽‍♀🏊‍♀️🏊‍♀🏊🏿‍♀️🏊🏿‍♀🏊🏻‍♀️🏊🏻‍♀🏊🏾‍♀️🏊🏾‍♀🏊🏼‍♀️🏊🏼‍♀🏊🏽‍♀️🏊🏽‍♀👩‍🏫👩🏿‍🏫👩🏻‍🏫👩🏾‍🏫👩🏼‍🏫👩🏽‍🏫👩‍💻👩🏿‍💻👩🏻‍💻👩🏾‍💻👩🏼‍💻👩🏽‍💻💁‍♀️💁‍♀💁🏿‍♀️💁🏿‍♀💁🏻‍♀️💁🏻‍♀💁🏾‍♀️💁🏾‍♀💁🏼‍♀️💁🏼‍♀💁🏽‍♀️💁🏽‍♀🧛‍♀️🧛‍♀🧛🏿‍♀️🧛🏿‍♀🧛🏻‍♀️🧛🏻‍♀🧛🏾‍♀️🧛🏾‍♀🧛🏼‍♀️🧛🏼‍♀🧛🏽‍♀️🧛🏽‍♀🚶‍♀️🚶‍♀🚶🏿‍♀️🚶🏿‍♀🚶🏻‍♀️🚶🏻‍♀🚶🏾‍♀️🚶🏾‍♀🚶🏼‍♀️🚶🏼‍♀🚶🏽‍♀️🚶🏽‍♀👳‍♀️👳‍♀👳🏿‍♀️👳🏿‍♀👳🏻‍♀️👳🏻‍♀👳🏾‍♀️👳🏾‍♀👳🏼‍♀️👳🏼‍♀👳🏽‍♀️👳🏽‍♀👩‍🦳🧕🧕🏿🧕🏻🧕🏾🧕🏼🧕🏽👰‍♀️👰‍♀👰🏿‍♀️👰🏿‍♀👰🏻‍♀️👰🏻‍♀👰🏾‍♀️👰🏾‍♀👰🏼‍♀️👰🏼‍♀👰🏽‍♀️👰🏽‍♀👩‍🦯👩🏿‍🦯👩🏻‍🦯👩🏾‍🦯👩🏼‍🦯👩🏽‍🦯🧟‍♀️🧟‍♀👢👚👒👡👭👭🏿👩🏿‍🤝‍👩🏻👩🏿‍🤝‍👩🏾👩🏿‍🤝‍👩🏼👩🏿‍🤝‍👩🏽👭🏻👩🏻‍🤝‍👩🏿👩🏻‍🤝‍👩🏾👩🏻‍🤝‍👩🏼👩🏻‍🤝‍👩🏽👭🏾👩🏾‍🤝‍👩🏿👩🏾‍🤝‍👩🏻👩🏾‍🤝‍👩🏼👩🏾‍🤝‍👩🏽👭🏼👩🏼‍🤝‍👩🏿👩🏼‍🤝‍👩🏻👩🏼‍🤝‍👩🏾👩🏼‍🤝‍👩🏽👭🏽👩🏽‍🤝‍👩🏿👩🏽‍🤝‍👩🏻👩🏽‍🤝‍👩🏾👩🏽‍🤝‍👩🏼👯‍♀️👯‍♀🤼‍♀️🤼‍♀🚺🪵🥴🗺️🗺🪱😟🎁🔧✍️✍✍🏿✍🏻✍🏾✍🏼✍🏽🩻🧶🥱🟡💛🟨💴☯️☯🪀🤪🦓🤐🧟🇦🇽
""".replace('\n','')))
import random, numpy

async def populateEmojiHold(self):
    for pid in self.Data['PlayerData'].keys():
        self.Data['PlayerData'][pid]['EmojiHold'] += self.Data['PlayerData'][pid]['Emojis']
        self.Data['PlayerData'][pid]['EmojiHold']  = sorted(self.Data['PlayerData'][pid]['EmojiHold'])


async def tradeEmoji(self, payload):
    payload['Content'] = payload['Content'].replace('  ',' ').strip()
    playerid = payload['Content'].split(' ')[1]
    emoji    = payload['Content'].split(' ')[2]

    player = await self.getPlayer(playerid, payload)
    pid = player.id

    if emoji not in self.Data['PlayerData'][payload['Author ID']]['EmojiHold']: 
        await payload['raw'].add_reaction('❌')
        return
    
    self.Data['PlayerData'][payload['Author ID']]['EmojiHold'].remove(emoji)
    self.Data['PlayerData'][                 pid]['EmojiHold'].append(emoji)
    self.Data['PlayerData'][                 pid]['EmojiHold'] = \
        sorted(self.Data['PlayerData'][pid]['EmojiHold'])

async def addEmojiHold(self, payload):
    if payload.get('Author') not in self.moderators: return
    payload['Content'] = payload['Content'].replace('  ',' ').strip()
    if len(payload['Content'].split(' ')) != 3: 
        await payload['raw'].add_reaction('❌')
        return

    playerid = payload['Content'].split(' ')[1]
    emoji    = payload['Content'].split(' ')[2]

    player = await self.getPlayer(playerid, payload)
    pid = player.id

    self.Data['PlayerData'][ pid]['EmojiHold'].append(str(emoji))
    self.Data['PlayerData'][ pid]['EmojiHold'] = \
        sorted(self.Data['PlayerData'][pid]['EmojiHold'])

async def subEmojiHold(self, payload):
    if payload.get('Author') not in self.moderators: return
    payload['Content'] = payload['Content'].replace('  ',' ').strip()
    playerid = payload['Content'].split(' ')[1]
    emoji    = payload['Content'].split(' ')[2]

    player = await self.getPlayer(playerid, payload)
    pid = player.id
    
    self.Data['PlayerData'][ pid]['EmojiHold'].remove(emoji)

async def mix(self, payload):
    payload['Content'] = payload['Content'].replace('  ',' ').strip()
    emoji1   = payload['Content'].split(' ')[1]#.encode('utf-8').replace(b'\xb8\x8f',b'').replace(b'\xb8\x8e',b'')
    emoji2   = payload['Content'].split(' ')[2]#.encode('utf-8').replace(b'\xb8\x8f',b'').replace(b'\xb8\x8e',b'')

    emojiInd1 = emojis.index(emoji1)
    emojiInd2 = emojis.index(emoji2)
   
    newEmoji = readMap(emojiInd1, emojiInd2)
    
    await payload['raw'].add_reaction(newEmoji)

    pid = payload['Author ID']
    print(str([emoji1, emoji2, newEmoji]).encode('utf-8'), str(self.Data['PlayerData'][pid]['EmojiHold']).encode('utf-8') )
    print(str([emoji1, emoji2, newEmoji]), str(self.Data['PlayerData'][pid]['EmojiHold']) )
    
    if emoji1 not in self.Data['PlayerData'][pid]['EmojiHold']: 
        await payload['raw'].add_reaction('❌')
        return
    if emoji2 not in self.Data['PlayerData'][pid]['EmojiHold']: 
        await payload['raw'].add_reaction('❌')
        return

    self.Data['PlayerData'][ pid]['EmojiHold'].remove(emoji1)
    self.Data['PlayerData'][ pid]['EmojiHold'].remove(emoji2)

    
    self.Data['PlayerData'][ pid]['EmojiHold'].append(newEmoji)
    self.Data['PlayerData'][ pid]['EmojiHold'].append(newEmoji)
    
async def createMap(self, payload=None):
    if payload is not None and payload.get('Author') not in self.moderators: return

    combos = numpy.random.randint(len(emojis), size=(len(emojis), len(emojis)))
    # Create a sample NumPy array
    
    # Create a new symmetric array with preserved original values
    combos = numpy.triu(combos) + numpy.triu(combos, 1).T

    # Print the original array and the new symmetric array
    numpy.save("EmojiMap.npy", combos)

def readMap( e1, e2):
    ind = numpy.load("EmojiMap.npy")[e1, e2]
    return emojis[ numpy.load("EmojiMap.npy")[e1, e2] ]